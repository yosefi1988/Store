@using WebApplicationStore.Models.StoreDbModels
@model WebApplicationStore.Models.ViewModels.PaymentModelView

 
@{
    ViewBag.Title = "Location Selection";
    int SumTotalPriceWithTax = 0; // متغیر برای ذخیره جمع
    int SumCount = 0;
    int SumCountXPrice = 0;
    int totalSumTAX = 0;
}   

@Html.HiddenFor(model => model.UserId)
@Html.HiddenFor(model => model.SelectedBasketId)

<h5>جزئیات محصولات سبد</h5>
<div class="table-responsive">
    <table class="table table-bordered table-hover">
        <thead class="thead-light">
            <tr>
                <th>نام محصول</th>
                <th>تعداد محصول</th>
                <th>کد محصول</th>
                <th>قیمت (تومان)</th>
                <th>تخفیف (%)</th>
                <th>رنگ</th>
                <th>تعداد باقی‌مانده</th>
                <th>قیمت کل با مالیات (تومان)</th>
                <th>تاریخ اضافه شدن</th>
                <th>عملیات</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ViewUserBasketsObject item in Model.ListBasketsObjects)
            {
                <tr>
                    <td>@item.ProductName</td>
                    <td>@item.Count</td>
                    <td>@item.ProductCode</td>
                    <td>@item.Price</td>
                    <td>@item.Discount%</td>
                    <td>@item.Color (@item.ColorCode)</td>
                    <td>@item.RemainingCount</td>
                    <td>@item.Count * @item.TaxPercentage /100</td>
                    <td>@item.AddInToBasketDate</td>
                    <td>
                        <a class="btn btn-info btn-sm" href="@Url.Action("Index", "ProductDetials", new { id = @item.ProductChargePropertiesId })">جزئیات</a>
                        <a class="btn btn-danger btn-sm" href="@Url.Action("RemoveFromBasket", "Home", new {
                            userId =  User.Identity.Name,
                            _productChargePropertiesId =  @item.ProductChargePropertiesId,
                            basketId = item.ShoppingBasketId })">حذف</a>
                    </td>
                </tr>

                // جمع کردن TotalPriceWithTax
                SumTotalPriceWithTax += (int)(@item.Count * @item.TaxPercentage /100);
                <br />
                SumCount += (int)item.Count;
                SumCountXPrice += (int)item.Count * (int)item.Price;
                totalSumTAX += (((int)item.Count * (int)item.Price) * (int)item.TaxPercentage) / 100;
            }
        </tbody>
    </table>
</div>

 
<!-- Modal -->
<div class="modal fade" id="addressModal" tabindex="-1" role="dialog" aria-labelledby="addressModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addressModalLabel">ثبت آدرس</h5>
      </div>
      <div class="modal-body">
        لطفاً ابتدا آدرس خود را ثبت کنید.
      </div>
      <div class="modal-footer">
            <a href="/Addresses/Create" class="btn btn-primary">رفتن به صفحه ثبت آدرس</a>
      </div>
    </div>
  </div>
</div>

 


<div class="form-group">
    <!-- فرم فرعی داخل فرم اصلی -->
    <div id="subFormContainer">
        <form id="subForm">
            @Html.LabelFor(model => model.DiscountCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountCode, new { htmlAttributes = new { @class = "form-control", id = "DiscountCode" } })
                @Html.ValidationMessageFor(model => model.DiscountCode, "", new { @class = "text-danger" })
            </div>
            <button type="button" id="submitSubForm" class="btn btn-primary">ارسال کد تخفیف</button>
        </form>

        <!-- لیبل برای نمایش نتیجه -->
        <label id="discountLabel" class="control-label col-md-2">نتیجه کد تخفیف</label>
    </div>
</div>
<input type="hidden" id="couponIdHidden" name="CityID" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#submitSubForm').click(function () {
            var formData = {
                DiscountCode: $('#DiscountCode').val() // گرفتن مقدار فیلد ورودی
            };

            $.ajax({
                url: '@Url.Action("SubmitDiscountCode", "ProductDetials")',  // اکشن و کنترلر سرور
                type: 'POST',
                data: formData,
                success: function (response) {
                    // بروزرسانی لیبل با مقدار بازگشتی
                    //$('#discountLabel').text(response.message);

                    // فرض کنید response یک شیء JSON باشد
                    var message = response.message; // استخراج مقدار 'message' از JSON

                    // بروزرسانی لیبل با مقادیر دریافت‌شده
                    $('#discountLabel').text('Message: ' + message);

                    if (message == "کد تخفیف نا معتبر است") {
                        calculateDiscount(@SumTotalPriceWithTax, 0, 0);
                    }
                    else {


                        const jsonString = message;

                        const parsedData = JSON.parse(jsonString);
                        const maxRialValue = parsedData.MaxRialValue;
                        const couponPercent = parsedData.CouponPercent;
                        const couponId = parsedData.Id;
                        $('#discountLabel').append('</br>')
                        $('#discountLabel').append('maxRialValue:' + maxRialValue)
                        $('#discountLabel').append('</br>')
                        $('#discountLabel').append('couponPercent:' + couponPercent)
                        $('#discountLabel').append('</br>')
                        $('#discountLabel').append('DiscountCodeID:' + couponId)

                        $('#discountLabel').append('</br>')
                        console.log(maxRialValue);  // 100000
                        console.log(couponPercent); // 20
                        console.log(couponId); // 20
                        $('#discountLabelAmount').text('discountLabelAmount:' + maxRialValue)
                        $('#discountLabelPercent').text('discountLabelPercent:' + couponPercent)
                        document.getElementById('couponIdHidden').value = couponId;

                        // برای نمونه می‌توانید به این شکل تابع را فراخوانی کنید:
                        calculateDiscount(@SumTotalPriceWithTax, couponPercent, maxRialValue); // مبلغ اولیه: 100,000، درصد تخفیف: 20%، سقف تخفیف: 15,000
                    }

                },
                error: function (xhr, status, error) {
                    console.log("Error: " + error);
                }
            });
        });
        calculateDiscount(@SumTotalPriceWithTax, 0, 0);
    });
</script>
<hr /> 
<div class="form-group">
    @* @Html.LabelFor(model => model.sdAddressDropdown, "addressDropdown", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.sdAddressDropdown, Model.sdAddressDropdown, "-- Select Address --", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.sdAddressDropdown, "", new { @class = "text-danger" })
    </div>
    *@
            
          
    <select id="addressDropdown">
        <option value="">Select Address</option>
        @foreach (var country in Model.sdAddressDropdown)
        {
            <option value="@country.Value" data-meta="@country.Meta">@country.Text </option>
        }
    </select> 
    <script>
        document.getElementById('addressDropdown').addEventListener('change', function () {
            // مقدار متا از گزینه انتخاب‌شده گرفته می‌شود
            var selectedOption = this.options[this.selectedIndex];
            //var metaValue = selectedOption.text.split(' ').pop(); // جدا کردن Meta از Text


            var metaValue1 = selectedOption.getAttribute('data-meta'); // گرفتن مقدار Meta از data-meta
            var value = selectedOption.getAttribute('value'); // گرفتن مقدار Meta از value
            
            // نمایش Meta با استفاده از alert
            // if (metaValue1) {
            //     alert("Selected Meta (CityId): " + metaValue1);
            // }
            // مقدار متا در hidden input قرار می‌گیرد
            document.getElementById('cityIdHidden').value = metaValue1;
            document.getElementById('cityIdLabel').textContent = metaValue1;


            document.getElementById('addressIdHidden').value = value;
            document.getElementById('addressIdLabel').textContent = value;

            prepareSendType(metaValue1);
        });
    </script>

    <br />
    ,[CityID]
    <input type="hidden" id="cityIdHidden" name="CityID" />
    <label id="cityIdLabel"></label>
    <br />
    ,[AddressID]
    <input type="hidden" id="addressIdHidden" name="CityID" />
    <label id="addressIdLabel"></label>
</div>
<br /> 


<select id="SendProductsPricesDropdown">
    <option value="">Select</option>
@*     @foreach (var country in ViewBag.SendProductsPrices)
    {
        <option value="@country.Value">@country.Text</option>
    } *@
</select>
<script>
    document.getElementById('SendProductsPricesDropdown').addEventListener('change', function () {
        // مقدار متا از گزینه انتخاب‌شده گرفته می‌شود
        var selectedOption = this.options[this.selectedIndex];
        //var metaValue = selectedOption.text.split(' ').pop(); // جدا کردن Meta از Text

        var metaValue1 = selectedOption.getAttribute('data-meta');  
        var value = selectedOption.getAttribute('value'); 

        document.getElementById('sendTypeIdHidden').value = value;
        document.getElementById('sendTypeIdLabel').textContent = value;
        document.getElementById("SendAmount").textContent = metaValue1;

        calculateFinalPrice();
    });
</script>
,[Send Type ID]
<input type="hidden" id="sendTypeIdHidden" name="CityID" />
<label id="sendTypeIdLabel"></label>



<hr />
<label>جمع تعداد کل : @SumCount</label>
<br />
<label>جمع کل مبلغ محصولات: @SumCountXPrice</label>
<br />
<label>جمع کل مبلغ مالیات: @totalSumTAX</label>
<br />

<!-- نمایش جمع در یک label -->
<label>جمع کل کالاهای سبد همراه با مالیات: @SumTotalPriceWithTax</label>
<br />
<label>جمع کل سبد بعد از تخفیف: <span id="totalBasketSumAfterCoupon">0</span></label>
<br />
<label>میزان تخفیف: <span id="totalTakhfif">0</span></label>
<br />
<label>هزینه ارسال: <span id="SendAmount">0</span></label>
 
 <br />
      ,[ShoppingBasketID]
        @Html.DisplayFor(model => model.SelectedBasketId)   

<br />
<label id="discountLabelAmount" class="control-label col-md-2">0</label>
<br />
<br />

<label id="discountLabelPercent" class="control-label col-md-2">0</label>
<br /> 


<br />
      ,[SumShoppingBasketPrice]
<br />
<label>هزینه قابل پرداخت: <span id="finalTotalSum">0</span></label>
<br />

<br />
      ,[SumShoppingBasketDiscount]
<br />
      ,[AmountForPay]
<br />
      ,[PaymentStatusID]
<br />
      ,[PaymentTrackingNo]
<br />
      ,[PaymentDate]  
<br />
  ---------------- end [SD_Transactions]----------------------
<br />

<div class="text-center">
    <h1 class="display-4">zarinpal</h1>
    @*<input type="submit" value="ارسال درخواست" class="btn btn-success" />  *@
    <a 
        class="btn btn-primary btn-block" 
        asp-action="PaymenBytHttpClient"> پرداخت
    </a>

    <a href="#" onclick="submitPayment()">پرداخت2</a>


    <script>
        function submitPayment() {
            var cityId = document.getElementById("cityIdHidden").value;
            var addressId = document.getElementById("addressIdHidden").value;
            var sendTypeId = document.getElementById("sendTypeIdHidden").value;
            var totalSum = document.getElementById("finalTotalSum").textContent;
            var DiscountCodeID = document.getElementById("couponIdHidden").value;
            
            var UserIdx = document.getElementById("UserId").value;
            var SelectedBasketIdx = document.getElementById("SelectedBasketId").value;

            // ساخت URL با استفاده از جاوااسکریپت
            var url = '@Url.Action("PaymenBytHttpClient", "ProductDetials")' +
                '?ids=' + SelectedBasketIdx + "1" +
                '&ids=' + cityId + "2" +
                '&ids=' + addressId + "3" +
                '&ids=' + sendTypeId + "4" +
                '&ids=' + totalSum + "5" +
                '&ids=' + UserIdx + "6" + 
                '&ids=' + DiscountCodeID + "7";

            // انتقال کاربر به URL ساخته‌شده
            window.location.href = url;
        }

    </script>

</div>
<br />
 ----------------[SD_SendBoxs]----------------------
<br />
      ,[ShoppingBasketID]  
        @Html.DisplayFor(model => model.SelectedBasketId)       
<br />
      ,[TransactionID]
<br />
      ,[SendPriceID]
<br />
      ,[SendTypeTitle] 
     

<br />
      ,[FullName]
<br />
      ,[MobileNo]
<br />
      ,[SendDate]
<br />
      ,[SendStatusID]
<br />
      ,[SendTrackingNo]
<br />
  ----------------End [SD_SendBoxs]----------------------
<br />
  [UserId]
<br />
@Html.DisplayFor(model => model.UserId)
<br />
 
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () { 
        $('#addressDropdown').change(function () {
            var countryId = $(this).val();
            if (countryId) {
                $.getJSON('@Url.Action("GetStates", "ProductDetials")', { countryId: countryId }, function (data) {
                    $('#stateDropdown').empty();
                    $('#stateDropdown').append('<option value="">Select State</option>');
                    $.each(data, function (index, item) {
                        $('#stateDropdown').append('<option value="' + item.id + '">' + item.title + '</option>');
                    });
                });
            } else {
                $('#stateDropdown').empty();
                $('#cityDropdown').empty();
            }
        });

        // وقتی استان انتخاب می‌شود، شهرها را لود می‌کنیم
        $('#stateDropdown').change(function () {
            var stateId = $(this).val();
            if (stateId) {
                $.getJSON('@Url.Action("GetCities", "ProductDetials")', { stateId: stateId }, function (data) {
                    $('#cityDropdown').empty();
                    $('#cityDropdown').append('<option value="">Select City</option>');
                    $.each(data, function (index, item) {
                        $('#cityDropdown').append('<option value="' + item.id + '">' + item.title + '</option>');
                    });
                });
            } else {
                $('#cityDropdown').empty();
            }
        });

        window.addEventListener('load', function () {
            //alert('صفحه به‌طور کامل بارگذاری شد.');
        });


        var addressDropdown = $('#addressDropdown');

        // چک کردن اگر بیشتر از دو آیتم در داخل دراپ‌داون وجود دارد
        if (addressDropdown.children('option').length > 1) {
            //alert("تعداد آیتم‌های دراپ‌داون: " + addressDropdown.children('option').length);
        } else {
            //alert("تعداد آیتم‌ها کمتر یا مساوی دو است.");
            $('#addressModal').modal({
                backdrop: 'static',
                keyboard: false
            });
            $('#addressModal').modal('show');
        }

        // //////modal
        // var addressDropdown = $('#addressDropdown');
        // var addressDropdownValue = addressDropdown.val();
         

        // // چک کردن اگر دو آیتم در داخل دراپ‌داون وجود دارد
        // if (addressDropdown.children('option').length > 2) {
        //     // نمایش مودال و غیرفعال کردن بسته شدن
        //     $('#addressModal').modal({
        //         backdrop: 'static',
        //         keyboard: false
        //     });
        //     $('#addressModal').modal('show');
        //     //alert(addressDropdown.children('option').length);
        // }
        // else{
        //     //alert("false");
        // }
        // چک کردن اگر مقدار آدرس خالی بود
        // if (!addressDropdownValue) {
        //     // نمایش مودال و غیرفعال کردن بسته شدن
        //     $('#addressModal').modal({
        //         backdrop: 'static',
        //         keyboard: false
        //     });
        //     //$('#addressModal').modal('show');
        //     alert("t");
        // }
        ////////modal end 
    });

    function calculateDiscount(AmountBeforeCoupon, discountPercent, discountCap) {
        // محاسبه مقدار تخفیف
        let discountAmount = (AmountBeforeCoupon * discountPercent) / 100;

        // بررسی سقف تخفیف
        if (discountAmount > discountCap) {
            discountAmount = discountCap; // اگر تخفیف بیشتر از سقف بود، مقدار سقف تخفیف در نظر گرفته می‌شود
        }

        // کم کردن تخفیف از مبلغ اولیه
        let AmountAfterCoupon = AmountBeforeCoupon - discountAmount;

        // قرار دادن نتیجه در @SumTotalPriceWithTax
        document.getElementById("totalBasketSumAfterCoupon").textContent = AmountAfterCoupon;
        document.getElementById("totalTakhfif").textContent = AmountBeforeCoupon - AmountAfterCoupon;

        calculateFinalPrice();
    }

    function calculateFinalPrice() {
        var totalBasketSumAfterCouponElement = document.getElementById("totalBasketSumAfterCoupon");
        var SendAmountElement = document.getElementById("SendAmount");
        var tmp1 = parseFloat(SendAmountElement.textContent);
        var tmp2 = parseFloat(totalBasketSumAfterCouponElement.textContent);
        document.getElementById("finalTotalSum").textContent = tmp2 + tmp1
    }


    function prepareSendType(cityId) {
        var formData = { CityId: cityId };  // ارسال مقدار cityId به عنوان داده به سرور
 
        $.ajax({
            url: '@Url.Action("SubmitSendTypeCode", "ProductDetials")',  // اکشن و کنترلر سرور
            type: 'POST',
            data: formData,
            success: function (response) {
                // اول DropDownList را پاک می‌کنیم
                $("#SendProductsPricesDropdown").empty();

                if (response.message) {
                    var data = JSON.parse(response.message);

                    // اضافه کردن هر آیتم به DropDownList
                    $.each(data, function (i, item) {
                        $("#SendProductsPricesDropdown").append(
                            $("<option></option>")
                                .val(item.Value)
                                .text(item.Text)
                                .attr("data-meta", item.Meta)  
                        );
                    });


                    // on change DDl call
                    var selectElement = document.getElementById("SendProductsPricesDropdown");
                    selectElement.dispatchEvent(new Event('change'));

                    calculateFinalPrice();
                } else {
                    // اگر داده‌ای برنگشت، می‌توانید پیغام خطا نمایش دهید
                    alert("No products found for the selected city.");
                }

            },
            error: function (xhr, status, error) {
                console.log("Error: " + error);
            }
        });
    }


</script>
